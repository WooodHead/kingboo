version: "3.7"
services:
#  user-service:
#    build:
#      context: ./backend
#      dockerfile: backend/kb-user-service.Dockerfile
#    image: kb-user-service
#    volumes:
#      - ./compose-output:/usr/src/app/dist/apps/user-service/output
#      - ./tools/wait-for-it.sh:/wait-for-it.sh
#    ports:
#      - 38082:8080
#    command: ["/wait-for-it.sh", "rabbitmq:5672", "-t", "60", "--", "node", "main"]

  search-queue-manager:
    build:
      context: ./backend
      dockerfile: kb-search-queue-manager.Dockerfile
    image: kb-search-queue-manager
    env_file:
      - dev.env
    volumes:
      - ./compose-output:/usr/src/app/dist/apps/search-queue-manager/output
      - ./tools/wait-for-it.sh:/wait-for-it.sh
    ports:
      - 38081:8080
    command: ["/wait-for-it.sh", "rabbitmq:5672", "-t", "60", "--", "node", "main"]

  data-collector:
    build:
      context: ./backend
      dockerfile: kb-data-collector.Dockerfile
    image: kb-data-collector
    env_file:
      - dev.env
    volumes:
      - ./compose-output:/usr/src/app/dist/apps/data-collector/output
      - ./tools/wait-for-it.sh:/wait-for-it.sh
    ports:
      - 38082:8080
    command: ["/wait-for-it.sh", "faunadb:8443", "-t", "60", "--", "node", "main"]


#  search-result-calculator:
#    build:
#      context: ./backend
#      dockerfile: kb-search-result-calculator.Dockerfile
#    image: kb-search-result-calculator
#    env_file:
#      - dev.env
#    volumes:
#      - ./compose-output:/usr/src/app/dist/apps/search-result-calculator/output
#      - ./tools/wait-for-it.sh:/wait-for-it.sh
#    ports:
#    - 38083:8080
#    command: ["/wait-for-it.sh", "faunadb:8443", "-t", "60", "--", "node", "main"]

  rabbitmq:
    image: rabbitmq:3-management-alpine
    environment:
      RABBITMQ_DEFAULT_USER: dev
      RABBITMQ_DEFAULT_PASS: dev
    volumes:
    - ./backend/mq/rmq-definitions.json:/etc/rabbitmq/definitions.json
    ports:
      - 15672:15672
      - 5672:5672

  mongo:
    image: mongo
    ports:
      - 27017:27017

  faunadb:
    image: fauna/faunadb
    ports:
      - 8443:8443
      - 8444:8444

  faunadb-initializer:
    build:
      context: ./db/fauna
      dockerfile: faunadb-initializer.Dockerfile
    depends_on:
      - faunadb
    env_file:
      - dev.env
    environment:
      FAUNADB_INITIALIZED_CHECK_ADDRESS: http://faunadb:8443/ping
      FAUNA_ADMIN_DB_SECRET: secret
      FAUNA_DB_NAME: kingboo
      FAUNA_PATH_TO_INIT_DB_SCRIPT: /bin/create-kingboo-db-with-data.fql
    command: ["/bin/bash", "-c", "init-db-when-ready.sh"]
    volumes:
      - ./db/fauna/create-kingboo-db-with-data.fql:/bin/create-kingboo-db-with-data.fql
      - ./db/fauna/init-db-when-ready.sh:/bin/init-db-when-ready.sh

  faunadb-dashboard:
    build:
      context: ./db/fauna
      dockerfile: faunadb-dashboard.Dockerfile
    depends_on:
      - faunadb
    ports:
      - 33000:3000
